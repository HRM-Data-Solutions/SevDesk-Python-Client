{
    "openapi": "3.0.0",
    "info": {
        "title": "sevDesk Invoice API",
        "description": "\r\n# General information\r\nWelcome to our Invoice API!<br>\r\nYou can use it to manage invoices in your sevDesk account.\r\n\r\n# Cross-Origin Resource Sharing\r\nThis API features Cross-Origin Resource Sharing (CORS).<br>\r\nIt enables cross-domain communication from the browser.<br>\r\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\r\n\r\n# Embedding resources\r\nWhen retrieving resources by using this API, you might encounter nested resources in the resources you requested.<br>\r\nFor example, an invoice always contains a contact, of which you can see the ID and the object name.<br>\r\nThis API gives you the possibility to embed these resources completely into the resources you originally requested.<br>\r\nTaking our invoice example, this would mean, that you would not only see the ID and object name of a contact, but rather the complete contact resource.\r\n\r\nTo embed resources, all you need to do is to add the query parameter 'embed' to your GET request.<br>\r\nAs values, you can provide the name of the nested resource.<br>\r\nMultiple nested resources are also possible by providing multiple names, separated by a comma.\r\n",
        "contact": {
            "email": "support@sevdesk.de"
        },
        "version": "2.0.0",
        "x-logo": {
            "url": "https://my.sevdesk.de/img/logos/1_100.png",
            "backgroundColor": "#263241",
            "altText": "sevDesk Logo"
        }
    },
    "servers": [
        {
            "url": "https://my.sevdesk.de/api/v1",
            "description": "Our main application instance which most of our customers work with"
        },
        {
            "url": "https://my.pebesmart.ch/api/v1",
            "description": "Our swiss application instance, hosted and maintained by smart seven AG"
        },
        {
            "url": "http://sevdesk.local/api/v1",
            "description": "sevDesk internal local instance"
        }
    ],
    "paths": {
        "/Invoice/Factory/getNextInvoiceNumber": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get the next invoice number",
                "operationId": "getNextInvoiceNumber",
                "parameters": [
                    {
                        "name": "invoiceType",
                        "in": "query",
                        "description": "Specifies the invoice type for which you want to get the next invoice number.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "useNextNumber",
                        "in": "query",
                        "description": "Specifies if the number sequence should be increased by one.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns net invoice number",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/Factory/saveInvoice": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create a new invoice",
                "description": "This endpoint offers you the following functionality.\r\n     <ul>\r\n        <li>Create invoices together with positions and discounts</li>\r\n        <li>Delete positions while adding new ones</li>\r\n        <li>Delete or add discounts, or both at the same time</li>\r\n        <li>Automatically fill the address of the supplied contact into the invoice address</li>\r\n     </ul>\r\n     To make your own request sample slimmer, you can omit all parameters which are not required and nullable.\r\n     However, for a valid and logical bookkeeping document, you will also need some of them to ensure that all the necessary data is in the invoice.",
                "operationId": "createInvoiceByFactory",
                "requestBody": {
                    "description": "Creation data. Please be aware, that you need to provide at least all required parameter\r\n    of the invoice model!",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice",
                                    "invoicePosSave",
                                    "invoicePosDelete",
                                    "discountSave",
                                    "discountDelete"
                                ],
                                "properties": {
                                    "invoice": {
                                        "description": "The invoice you want to create",
                                        "type": "object",
                                        "$ref": "#/components/schemas/saveInvoiceInvoiceObject"
                                    },
                                    "invoicePosSave": {
                                        "description": "The invoice positions you want to create. If you don't have any, set to null.",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/saveInvoiceInvoicePosObject"
                                        },
                                        "nullable": true
                                    },
                                    "invoicePosDelete": {
                                        "description": "The invoice positions you want to delete. If you don't have any, set to null.",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/saveInvoiceInvoicePosDelete"
                                        },
                                        "default": null,
                                        "nullable": true
                                    },
                                    "discountSave": {
                                        "description": "The discounts you want to create. If you don't have any, set to null.",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/saveInvoiceDiscountSave"
                                        },
                                        "default": null,
                                        "nullable": true
                                    },
                                    "discountDelete": {
                                        "description": "The discounts you want to delete. If you don't have any, set to null.",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/saveInvoiceDiscountDelete"
                                        },
                                        "default": null,
                                        "nullable": true
                                    },
                                    "takeDefaultAddress": {
                                        "description": "Defines if the address of the supplied contact is automatically filled into the invoice.",
                                        "type": "boolean",
                                        "default": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created - Returns created invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "objects": {
                                            "type": "object",
                                            "properties": {
                                                "invoice": {
                                                    "description": "The created invoice",
                                                    "type": "object",
                                                    "$ref": "#/components/schemas/Model_Invoice"
                                                },
                                                "invoicePos": {
                                                    "description": "The created invoice positions",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Model_InvoicePos"
                                                    },
                                                    "nullable": true
                                                },
                                                "discount": {
                                                    "description": "The created invoice discounts",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Model_DiscountPos"
                                                    },
                                                    "nullable": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Retrieve invoices",
                "description": "There are a multitude of parameter which can be used to filter. A few of them are attached but\r\n     for a complete list please check out <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-invoices#filtering'>this</a> list",
                "operationId": "getInvoices",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the invoices",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "100",
                                "200",
                                "1000"
                            ]
                        }
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Retrieve all invoices with this invoice number",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Retrieve all invoices with a date equal or higher",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Retrieve all invoices with a date equal or lower",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "contact[id]",
                        "in": "query",
                        "description": "Retrieve all invoices with this contact. Must be provided with contact[objectName]",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "contact[objectName]",
                        "in": "query",
                        "description": "Only required if contact[id] was provided. 'Contact' should be used as value.",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerInternalNote",
                        "in": "query",
                        "description": "Retrieve an invoice with the given customer internal note.",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create a new invoice",
                "description": "You can still create invoices by using this request, however, this endpoint does not allow the\r\n     simultaneous creation of invoice positions. It only creates the invoice object!<br>\r\n     Please use the 'saveInvoice' endpoint for creating invoices together with positions, discounts, etc., in one request.<br>\r\n     Support for users integrating with this endpoint may be limited.",
                "operationId": "createInvoice",
                "requestBody": {
                    "description": "Creation data. Please be aware, that you need to provide at least all required parameter\r\n     of the invoice model!",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Model_Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created - Returns created invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "deprecated": true
            }
        },
        "/Invoice/{invoiceId}/getDiscounts": {
            "get": {
                "tags": [
                    "InvoiceDiscounts"
                ],
                "summary": "Get invoice discounts by id",
                "description": "Return discounts of an invoice",
                "operationId": "getDiscountsById",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_DiscountPos"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invoice was not found"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Find invoice by ID",
                "description": "Returns a single invoice",
                "operationId": "getInvoiceById",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invoice was not found"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an existing invoice",
                "description": "Update an invoice",
                "operationId": "updateInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Model_Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/getIsPartiallyPaid": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Check if an invoice is already partially paid",
                "description": "Returns 'true' if the given invoice is partially paid - 'false' if it is not.\r\n    Invoices which are completely paid are regarded as not partially paid.",
                "operationId": "getIsInvoicePartiallyPaid",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/markAsSent": {
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Mark an invoice as sent",
                "description": "Marks an invoice as sent. This endpoint should not be used any more as it bypasses the normal sending flow.",
                "operationId": "markInvoiceAsSent",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to mark as sent",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "deprecated": true
            }
        },
        "/Invoice/{invoiceId}/cancelInvoice": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Cancel an invoice / Create cancellation invoice",
                "description": "This endpoint will cancel the specified invoice therefor creating a cancellation invoice.<br>\r\n     The cancellation invoice will be automatically paid and the source invoices status will change to 'cancelled'.",
                "operationId": "cancelInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to be cancelled",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created - Returns cancellation invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/delete": {
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Deletes an invoice",
                "operationId": "deleteInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Id of invoice resource to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation - Invoice deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "409": {
                        "description": "Conflict - f.e occurs if the invoice is not a draft"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/render": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Render the pdf document of an invoice",
                "description": "Using this endpoint you can render the pdf document of an invoice.<br>\r\n     Use cases for this are the retrieval of the pdf location or the forceful re-render of a already sent invoice.<br>\r\n     Please be aware that changing an invoice after it has been sent to a customer is not an allowed bookkeeping process.",
                "operationId": "invoiceRender",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Id of invoice to render",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Define if the document should be forcefully re-rendered.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "draft": {
                                        "type": "boolean",
                                        "deprecated": true
                                    },
                                    "forceReload": {
                                        "description": "Define if a forceful re-render should occur.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns meta-data about pdf.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "docId": {
                                                        "description": "ID of the (temporary) document.",
                                                        "type": "string"
                                                    },
                                                    "pdfUrl": {
                                                        "description": "The url location of the (temporary) document.",
                                                        "type": "string"
                                                    },
                                                    "pages": {
                                                        "description": "The amount of pages of the document.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/sendViaEmail": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Send invoice via email",
                "description": "This endpoint sends the specified invoice to a customer via email.<br>\r\n    This will automatically mark the invoice as sent.<br>\r\n    Please note, that in production an invoice is not allowed to be changed after this happened!",
                "operationId": "sendInvoiceViaEMail",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to be sent via email",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Mail data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "toEmail",
                                    "subject",
                                    "text"
                                ],
                                "properties": {
                                    "toEmail": {
                                        "description": "The recipient of the email.",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "The subject of the email.",
                                        "type": "string"
                                    },
                                    "text": {
                                        "description": "The text of the email. Can contain html.",
                                        "type": "string"
                                    },
                                    "copy": {
                                        "description": "Should a copy of this email be sent to you?",
                                        "type": "boolean"
                                    },
                                    "additionalAttachments": {
                                        "description": "Additional attachments to the mail. String of IDs of existing documents in your\r\n     *                      sevdesk account separated by ','",
                                        "type": "string"
                                    },
                                    "ccEmail": {
                                        "description": "String of mail addresses to be put as cc separated by ','",
                                        "type": "string"
                                    },
                                    "bccEmail": {
                                        "description": "String of mail addresses to be put as bcc separated by ','",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created - Returns created mail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Email"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/changeStatus": {
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Changed status of invoice if not enshrined",
                "operationId": "invoiceChangeStatus",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice from which you want the pdf",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Specify invoice status",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Please have a look in our\r\n     <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-invoices#types'>API-Overview</a>\r\n     to see what the different status codes mean",
                                        "type": "string",
                                        "enum": [
                                            "50",
                                            "100",
                                            "200",
                                            "1000"
                                        ],
                                        "example": "100",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Model_Invoice"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/getPdf": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Retrieve pdf document of an invoice",
                "description": "Retrieves the pdf document of an invoice with additional metadata.",
                "operationId": "invoiceGetPdf",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice from which you want the pdf",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A pdf file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "object",
                                            "properties": {
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "mimetype": {
                                                    "type": "string"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "base64Encoded": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invoice was not found"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/sendBy": {
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Mark invoice as sent",
                "description": "Marks an invoice as sent by a chosen send type.",
                "operationId": "invoiceSendBy",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to mark as sent",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Specify the send type",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sendType",
                                    "sendDraft"
                                ],
                                "properties": {
                                    "sendType": {
                                        "description": "Specifies the way in which the invoice was sent to the customer.<br>\r\n     Accepts 'VPR' (print), 'VP' (postal), 'VM' (mail) and 'VPDF' (downloaded pfd).",
                                        "type": "string",
                                        "enum": [
                                            "VPR",
                                            "VP",
                                            "VM",
                                            "VPDF"
                                        ]
                                    },
                                    "sendDraft": {
                                        "description": "Specify if the should be enshrined after marking it as sent.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice log entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "description": "The invoice object which was marked as sent.",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/bookAmount": {
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Book an invoice",
                "description": "This endpoint can be used to book invoices.<br>\r\n    Invoices are booked on payment accounts where (bank) transactions are located and might be linked to the transactions\r\n    by using this endpoint.<br>\r\n    For more detailed information about booking invoices, please refer to\r\n    <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-invoices#booking'>this</a> section of our API-Overview.",
                "operationId": "bookInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Booking data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "date",
                                    "type",
                                    "checkAccount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount which should be booked. Can also be a partial amount.",
                                        "type": "number"
                                    },
                                    "date": {
                                        "description": "The booking date. Most likely the current date.",
                                        "type": "integer"
                                    },
                                    "type": {
                                        "description": "Define a type for the booking.<br>\r\n    The following type abbreviations are available (abbreviation <-> meaning).<br>\r\n    <ul>\r\n    <li>N <-> Normal booking / partial booking</li>\r\n    <li>CB <-> Reduced amount due to discount (skonto)</li>\r\n    <li>CF <-> Reduced/Higher amount due to currency fluctuations</li>\r\n    <li>O <-> Reduced/Higher amount due to other reasons</li>\r\n    <li>OF <-> Higher amount due to reminder charges</li>\r\n    <li>MTC <-> Reduced amount due to the monetary traffic costs</li>\r\n    </ul>",
                                        "type": "string",
                                        "enum": [
                                            "N",
                                            "CB",
                                            "CF",
                                            "O",
                                            "OF",
                                            "MTC"
                                        ]
                                    },
                                    "checkAccount": {
                                        "description": "The check account on which should be booked.",
                                        "required": [
                                            "id",
                                            "objectName"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "The id of the check account on which should be booked.",
                                                "type": "integer"
                                            },
                                            "objectName": {
                                                "description": "Internal object name which is 'CheckAccount'.",
                                                "type": "string",
                                                "example": "CheckAccount"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "checkAccountTransaction": {
                                        "description": "The check account transaction on which should be booked.<br>\r\n    The transaction will be linked to the invoice.",
                                        "required": [
                                            "id",
                                            "objectName"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "The id of the check account transaction on which should be booked.",
                                                "type": "integer"
                                            },
                                            "objectName": {
                                                "description": "Internal object name which is 'CheckAccountTransaction'.",
                                                "type": "string",
                                                "example": "CheckAccountTransaction"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "createFeed": {
                                        "description": "Determines if a feed is created for the booking process.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice log entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "description": "TODO: Document InvoiceLog and enter scheme here",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/Invoice/{invoiceId}/bookAmmount": {
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Book an invoice",
                "description": "This endpoint can be used to book invoices.<br>\r\n     Invoices are booked on payment accounts where (bank) transactions are located and might be linked to the transactions\r\n     by using this endpoint.<br>\r\n     For more detailed information about booking invoices, please refer to\r\n     <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-vouchers#booking'>this</a> section of our API-Overview.<br>\r\n     Be aware, that this endpoint is deprecated and the new endpoint 'bookAmount' should be used instead.",
                "operationId": "deprecatedBookInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of invoice to book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Booking data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ammount",
                                    "date",
                                    "type",
                                    "checkAccount"
                                ],
                                "properties": {
                                    "ammount": {
                                        "description": "Amount which should be booked. Can also be a partial amount.",
                                        "type": "number"
                                    },
                                    "date": {
                                        "description": "The booking date. Most likely the current date.",
                                        "type": "integer"
                                    },
                                    "type": {
                                        "description": "Define a type for the booking.<br>\r\n     The following type abbreviations are available (abbreviation <-> meaning).<br>\r\n     <ul>\r\n        <li>N <-> Normal booking / partial booking</li>\r\n        <li>CB <-> Reduced amount due to discount (skonto)</li>\r\n        <li>CF <-> Reduced/Higher amount due to currency fluctuations</li>\r\n        <li>O <-> Reduced/Higher amount due to other reasons</li>\r\n        <li>OF <-> Higher amount due to reminder charges</li>\r\n        <li>MTC <-> Reduced amount due to the monetary traffic costs</li>\r\n     </ul>",
                                        "type": "string"
                                    },
                                    "checkAccount": {
                                        "description": "The check account on which should be booked.",
                                        "required": [
                                            "id",
                                            "objectName"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "The id of the check account on which should be booked.",
                                                "type": "integer"
                                            },
                                            "objectName": {
                                                "description": "Internal object name which is 'CheckAccount'.",
                                                "type": "string",
                                                "example": "CheckAccount"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "checkAccountTransaction": {
                                        "description": "The check account transaction on which should be booked.<br>\r\n                                        The transaction will be linked to the invoice.",
                                        "required": [
                                            "id",
                                            "objectName"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "The id of the check account transaction on which should be booked.",
                                                "type": "integer"
                                            },
                                            "objectName": {
                                                "description": "Internal object name which is 'CheckAccountTransaction'.",
                                                "type": "string",
                                                "example": "CheckAccountTransaction"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "createFeed": {
                                        "description": "Determines if a feed is created for the booking process.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation - Returns changed invoice log entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "description": "TODO: Document InvoiceLog and enter scheme here",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "deprecated": true
            }
        },
        "/InvoicePos": {
            "get": {
                "tags": [
                    "InvoicePos"
                ],
                "summary": "Get invoice positions",
                "description": "Get all positions corresponding to an invoice",
                "operationId": "getInvoicePos",
                "parameters": [
                    {
                        "name": "invoice[objectName]",
                        "in": "query",
                        "description": "SevDesk Object name, should be 'Invoice'",
                        "default": "Invoice",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "invoice[id]",
                        "in": "query",
                        "description": "Invoice-ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of items to query",
                        "default": 9999,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "embed",
                        "in": "query",
                        "description": "Get some additional information. Embed can handle multiple values, they must be separated by comma. Default ``.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns invoice positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_InvoicePos"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "InvoicePos"
                ],
                "summary": "Create a new invoice position",
                "description": "You can still create invoices positions by using this request, however, this endpoint does not allow the\r\n    simultaneous creation of an invoice. It only creates the invoice position object!<br>\r\n    Please use the 'saveInvoice' endpoint for creating invoices together with positions, discounts, etc., in one request.<br>\r\n    Support for users integrating with this endpoint may be limited.",
                "operationId": "createInvoicePos",
                "requestBody": {
                    "description": "Creation data. Please be aware, that you need to provide at least all required parameter\r\n    of the invoice position model!",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Model_InvoicePos"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created - Returns created invoice position",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "objects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Model_InvoicePos"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "deprecated": true
            }
        }
    },
    "components": {
        "schemas": {
            "saveInvoiceInvoiceObject": {
                "required": [
                    "mapAll",
                    "objectName"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Model_Invoice"
                    },
                    {
                        "properties": {
                            "mapAll": {
                                "type": "boolean",
                                "default": "true"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "saveInvoiceInvoicePosObject": {
                "required": [
                    "mapAll",
                    "objectName"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Model_InvoicePos"
                    },
                    {
                        "properties": {
                            "mapAll": {
                                "type": "boolean",
                                "default": "true"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "saveInvoiceInvoicePosDelete": {
                "required": [
                    "id",
                    "objectName"
                ],
                "properties": {
                    "id": {
                        "description": "ID of position to delete",
                        "type": "integer"
                    },
                    "objectName": {
                        "description": "Object name of position",
                        "type": "string",
                        "default": "InvoicePos"
                    }
                },
                "type": "object"
            },
            "saveInvoiceDiscountSave": {
                "required": [
                    "discount",
                    "text",
                    "percentage",
                    "value",
                    "objectName",
                    "mapAll"
                ],
                "properties": {
                    "id": {
                        "description": "The invoice position id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "discount": {
                        "description": "Defines if this is a discount or a surcharge",
                        "type": "boolean",
                        "example": "true"
                    },
                    "text": {
                        "description": "A text for your discount",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "Defines if this is a percentage or an absolute discount",
                        "type": "boolean"
                    },
                    "value": {
                        "description": "Value of the discount",
                        "type": "number"
                    },
                    "objectName": {
                        "description": "Object name of the discount",
                        "type": "string",
                        "default": "Discounts"
                    },
                    "mapAll": {
                        "description": "Internal param",
                        "type": "boolean",
                        "default": "true"
                    }
                },
                "type": "object"
            },
            "saveInvoiceDiscountDelete": {
                "required": [
                    "id",
                    "objectName"
                ],
                "properties": {
                    "id": {
                        "description": "ID of discount to delete",
                        "type": "integer"
                    },
                    "objectName": {
                        "description": "Object name of discount",
                        "type": "string",
                        "default": "Discounts"
                    }
                },
                "type": "object"
            },
            "Model_Invoice": {
                "title": "Invoice model",
                "description": "Invoice model",
                "required": [
                    "invoiceDate",
                    "contact",
                    "discount",
                    "deliveryDate",
                    "status",
                    "smallSettlement",
                    "contactPerson",
                    "taxRate",
                    "taxText",
                    "taxType",
                    "invoiceType",
                    "currency"
                ],
                "properties": {
                    "id": {
                        "description": "The invoice id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "objectName": {
                        "description": "The invoice object name",
                        "type": "string",
                        "readOnly": true,
                        "nullable": false,
                        "default": "Invoice"
                    },
                    "invoiceNumber": {
                        "description": "The invoice number",
                        "type": "string",
                        "example": "RE-1000",
                        "nullable": true
                    },
                    "contact": {
                        "description": "The contact used in the invoice",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the contact",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'Contact'",
                                "type": "string",
                                "default": "Contact"
                            }
                        },
                        "type": "object",
                        "nullable": false
                    },
                    "create": {
                        "description": "Date of invoice creation",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update": {
                        "description": "Date of last invoice update",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sevClient": {
                        "description": "Client to which invoice belongs. Will be filled automatically",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the client",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'SevClient'",
                                "type": "string",
                                "default": "SevClient"
                            }
                        },
                        "type": "object",
                        "readOnly": true
                    },
                    "invoiceDate": {
                        "description": "Needs to be provided as timestamp or dd.mm.yyyy",
                        "type": "string",
                        "format": "date-time",
                        "example": "01.01.20",
                        "nullable": false
                    },
                    "header": {
                        "description": "Normally consist of prefix plus the invoice number",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "headText": {
                        "description": "Certain html tags can be used here to format your text",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "footText": {
                        "description": "Certain html tags can be used here to format your text",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "timeToPay": {
                        "description": "The time the customer has to pay the invoice in days",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "discountTime": {
                        "description": "If a value other than zero is used for the discount attribute,\r\n    you need to specify the amount of days for which the discount is granted.",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "discount": {
                        "description": "If you want to give a discount, define the percentage here. Otherwise provide zero as value",
                        "type": "integer",
                        "default": 0,
                        "nullable": false
                    },
                    "addressName": {
                        "description": "Can be omitted as complete address is defined in address attribute",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressStreet": {
                        "description": "Can be omitted as complete address is defined in address attribute",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressZip": {
                        "description": "Can be omitted as complete address is defined in address attribute",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressCity": {
                        "description": "Can be omitted as complete address is defined in address attribute",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressCountry": {
                        "description": "Can be omitted as complete address is defined in address attribute",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the country",
                                "type": "integer",
                                "deprecated": true
                            },
                            "objectName": {
                                "description": "Model name, which is 'StaticCountry'",
                                "type": "string",
                                "default": "StaticCountry",
                                "deprecated": true
                            }
                        },
                        "type": "object",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "payDate": {
                        "description": "Needs to be timestamp or dd.mm.yyyy",
                        "type": "string",
                        "format": "date-time",
                        "default": null,
                        "nullable": true
                    },
                    "createUser": {
                        "description": "Will be filled automatically by our system and can't be changed",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'SevUser'",
                                "type": "string",
                                "default": "SevUser"
                            }
                        },
                        "type": "object",
                        "readOnly": true
                    },
                    "deliveryDate": {
                        "description": "Timestamp. This can also be a date range if you also use the attribute deliveryDateUntil",
                        "type": "string",
                        "format": "date-time",
                        "example": "01.01.20",
                        "nullable": false
                    },
                    "status": {
                        "description": "Please have a look in our\r\n     <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-invoices#types'>API-Overview</a>\r\n     to see what the different status codes mean",
                        "type": "string",
                        "enum": [
                            "50",
                            "100",
                            "200",
                            "1000"
                        ],
                        "example": "100",
                        "nullable": false
                    },
                    "smallSettlement": {
                        "description": "Defines if the client uses the small settlement scheme.\r\n    If yes, the invoice must not contain any vat",
                        "type": "boolean",
                        "example": 0,
                        "nullable": false
                    },
                    "contactPerson": {
                        "description": "The user who acts as a contact person for the invoice",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'SevUser'",
                                "type": "string",
                                "default": "SevUser"
                            }
                        },
                        "type": "object"
                    },
                    "taxRate": {
                        "description": "Is overwritten by invoice position tax rates",
                        "type": "number",
                        "format": "float",
                        "example": 19,
                        "nullable": false
                    },
                    "taxText": {
                        "description": "A common tax text would be 'Umsatzsteuer 19%'",
                        "type": "string",
                        "example": "Umsatzsteuer 19%",
                        "nullable": false
                    },
                    "dunningLevel": {
                        "description": "Defines how many reminders have already been sent for the invoice.\r\n    Starts with 1 (Payment reminder) and should be incremented by one every time another reminder is sent.",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "addressParentName": {
                        "description": "Address parent name.",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressContactRef": {
                        "description": "Address contact reference.",
                        "type": "object",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "taxType": {
                        "description": "Tax type of the invoice.\nThere are four tax types:\n1. default - Umsatzsteuer ausweisen\n2. eu - Steuerfreie innergemeinschaftliche Lieferung (Europäische Union)\n3. noteu - Steuerschuldnerschaft des Leistungsempfängers (außerhalb EU, z. B. Schweiz)\n4. custom - Using custom tax set\nTax rates are heavily connected to the tax type used.",
                        "type": "string",
                        "default": "default",
                        "enum": [
                            "default",
                            "eu",
                            "noteu",
                            "custom"
                        ],
                        "nullable": false
                    },
                    "paymentMethod": {
                        "description": "Payment method used for the invoice",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the payment method",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'PaymentMethod'",
                                "type": "string",
                                "default": "PaymentMethod"
                            }
                        },
                        "type": "object",
                        "default": null
                    },
                    "costCentre": {
                        "description": "Cost centre for the invoice",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the cost centre",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'CostCentre'",
                                "type": "string",
                                "default": "CostCentre"
                            }
                        },
                        "type": "object",
                        "default": null
                    },
                    "sendDate": {
                        "description": "The date the invoice was sent to the customer",
                        "type": "string",
                        "format": "date-time",
                        "default": null,
                        "nullable": true
                    },
                    "origin": {
                        "description": "Origin of the invoice. Could f.e. be an order",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the object",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name. Could f.e. be 'Order''",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "default": null,
                        "nullable": true
                    },
                    "invoiceType": {
                        "description": "Type of the invoice. For more information on the different types, check\r\n     <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-invoices#types'>this</a> section of\r\n     our API-Overview",
                        "type": "string",
                        "default": "RE",
                        "enum": [
                            "RE",
                            "WKR",
                            "SR",
                            "MA",
                            "TR",
                            "ER"
                        ],
                        "nullable": false
                    },
                    "accountIntervall": {
                        "description": "The interval in which recurring invoices are due as ISO-8601 duration.<br>\r\n     Necessary attribute for all recurring invoices.",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "accountLastInvoice": {
                        "description": "Timestamp when the last invoice was generated by this recurring invoice.",
                        "type": "integer",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "accountNextInvoice": {
                        "description": "Timestamp when the next invoice will be generated by this recurring invoice.",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "reminderTotal": {
                        "description": "Total reminder amount",
                        "type": "number",
                        "format": "float",
                        "default": null,
                        "nullable": true
                    },
                    "reminderDebit": {
                        "description": "Debit of the reminder",
                        "type": "number",
                        "format": "float",
                        "default": null,
                        "nullable": true
                    },
                    "reminderDeadline": {
                        "description": "Deadline of the reminder as timestamp",
                        "type": "integer",
                        "format": "date-time",
                        "default": null,
                        "nullable": true
                    },
                    "reminderCharge": {
                        "description": "The additional reminder charge",
                        "type": "number",
                        "format": "float",
                        "default": null,
                        "nullable": true
                    },
                    "addressParentName2": {
                        "description": "Deprecated attribute",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "addressName2": {
                        "description": "Second name of the recipient",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "taxSet": {
                        "description": "Tax set of the invoice. Needs to be added if you chose the tax type custom",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the object",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'TaxSet'",
                                "type": "string",
                                "default": "TaxSet"
                            }
                        },
                        "type": "object",
                        "default": null,
                        "nullable": true
                    },
                    "addressGender": {
                        "description": "Gender of the recipient",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "accountEndDate": {
                        "description": "Deprecated attribute.",
                        "type": "integer",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "address": {
                        "description": "Complete address of the recipient including name, street, city, zip and country.\r\n     * Line breaks can be used and will be displayed on the invoice pdf.",
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "description": "Currency used in the invoice. Needs to be currency code according to ISO-4217",
                        "type": "string",
                        "default": "EUR",
                        "nullable": false
                    },
                    "sumNet": {
                        "description": "Net sum of the invoice",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumTax": {
                        "description": "Tax sum of the invoice",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumGross": {
                        "description": "Gross sum of the invoice",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumDiscounts": {
                        "description": "Sum of all discounts in the invoice",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumNetForeignCurrency": {
                        "description": "Net sum of the invoice in the foreign currency",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumTaxForeignCurrency": {
                        "description": "Tax sum of the invoice in the foreign currency",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumGrossForeignCurrency": {
                        "description": "Gross sum of the invoice in the foreign currency",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumDiscountsForeignCurrency": {
                        "description": "Discounts sum of the invoice in the foreign currency",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumNetAccounting": {
                        "description": "Net accounting sum of the invoice. Is usually the same as sumNet",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumTaxAccounting": {
                        "description": "Tax accounting sum of the invoice. Is usually the same as sumTax",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "sumGrossAccounting": {
                        "description": "Gross accounting sum of the invoice. Is usually the same as sumGross",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false
                    },
                    "paidAmount": {
                        "description": "Amount which has already been paid for this invoice by the customer",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "entryType": {
                        "description": "Deprecated attribute.",
                        "type": "object",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "customerInternalNote": {
                        "description": "Internal note of the customer. Contains data entered into field 'Referenz/Bestellnummer'",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "showNet": {
                        "description": "If true, the net amount of each position will be shown on the invoice. Otherwise gross amount",
                        "type": "boolean",
                        "default": "1",
                        "nullable": false
                    },
                    "enshrined": {
                        "description": "Defines if and when invoice was enshrined. Enshrined invoices can not be manipulated.",
                        "type": "string",
                        "format": "date-time",
                        "default": null,
                        "nullable": true
                    },
                    "sendType": {
                        "description": "Type which was used to send the invoice. IMPORTANT: Please refer to the invoice section of the\r\n     *     API-Overview to understand how this attribute can be used before using it!",
                        "type": "string",
                        "default": null,
                        "enum": [
                            "VPR",
                            "VPDF",
                            "VM",
                            "VP"
                        ],
                        "nullable": true
                    },
                    "deliveryDateUntil": {
                        "description": "If the delivery date should be a time range, another timestamp can be provided in this attribute\r\n     * to define a range from timestamp used in deliveryDate attribute to the timestamp used here.",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "datevConnectOnline": {
                        "description": "Internal attribute",
                        "type": "object",
                        "default": null,
                        "nullable": true
                    },
                    "sendPaymentReceivedNotificationDate": {
                        "description": "Internal attribute",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Model_Email": {
                "title": "Email model",
                "description": "Email model",
                "required": [
                    "from",
                    "to",
                    "subject"
                ],
                "properties": {
                    "id": {
                        "description": "The email id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": false
                    },
                    "objectName": {
                        "description": "The email object name",
                        "type": "string",
                        "readOnly": true,
                        "nullable": false
                    },
                    "create": {
                        "description": "Date of mail creation",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update": {
                        "description": "Date of last mail update",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "object": {
                        "description": "The contact used in the invoice",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the object",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'Invoice' or 'Order' or 'CreditNote'",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "from": {
                        "description": "The sender of the email",
                        "type": "string",
                        "nullable": false
                    },
                    "to": {
                        "description": "The recipient of the email",
                        "type": "string",
                        "nullable": false
                    },
                    "subject": {
                        "description": "The subject of the email",
                        "type": "string",
                        "nullable": false
                    },
                    "text": {
                        "description": "The text of the email",
                        "type": "string",
                        "nullable": true
                    },
                    "sevClient": {
                        "description": "Client to which mail belongs. Will be filled automatically",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the client",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'SevClient'",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "readOnly": true
                    },
                    "cc": {
                        "description": "A list of mail addresses which are in the cc",
                        "type": "string",
                        "nullable": true
                    },
                    "bcc": {
                        "description": "A list of mail addresses which are in the bcc",
                        "type": "string",
                        "nullable": true
                    },
                    "arrived": {
                        "description": "Date the mail arrived",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Model_DiscountPos": {
                "title": "Invoice discount position model",
                "description": "Invoice discount model",
                "properties": {
                    "id": {
                        "description": "The invoice discount id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": false
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "percentage": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Model_InvoicePos": {
                "title": "Invoice position model",
                "description": "Invoice position model",
                "required": [
                    "unity",
                    "taxRate"
                ],
                "properties": {
                    "id": {
                        "description": "The invoice position id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": false
                    },
                    "objectName": {
                        "description": "The invoice position object name",
                        "type": "string",
                        "readOnly": true,
                        "nullable": false,
                        "default": "InvoicePos"
                    },
                    "create": {
                        "description": "Date of invoice position creation",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "update": {
                        "description": "Date of last invoice position update",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "invoice": {
                        "description": "The invoice to which the position belongs.",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the invoice",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'Invoice'",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "readOnly": true
                    },
                    "part": {
                        "description": "Part from your inventory which is used in the position.",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the part",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'Part'",
                                "type": "string",
                                "default": "Part"
                            }
                        },
                        "type": "object"
                    },
                    "quantity": {
                        "description": "Quantity of the article/part",
                        "type": "number",
                        "format": "float",
                        "example": 1,
                        "nullable": true
                    },
                    "price": {
                        "description": "Price of the article/part. Is either gross or net, depending on the sevDesk account setting.",
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "nullable": true
                    },
                    "name": {
                        "description": "Name of the article/part.",
                        "type": "number",
                        "format": "float",
                        "example": "Dragonglass",
                        "nullable": true
                    },
                    "priority": {
                        "description": "Priority of the position.",
                        "type": "integer",
                        "default": 100,
                        "nullable": false,
                        "deprecated": true
                    },
                    "unity": {
                        "description": "The unit in which the positions part is measured",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the unit",
                                "type": "integer",
                                "example": 1
                            },
                            "objectName": {
                                "description": "Model name, which is 'Unity'",
                                "type": "string",
                                "default": "Unity"
                            },
                            "translationCode": {
                                "description": "Translation Code",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "sevClient": {
                        "description": "Client to which invoice position belongs. Will be filled automatically",
                        "required": [
                            "id",
                            "objectName"
                        ],
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the client",
                                "type": "integer"
                            },
                            "objectName": {
                                "description": "Model name, which is 'SevClient'",
                                "type": "string",
                                "default": "SevClient"
                            }
                        },
                        "type": "object",
                        "readOnly": true
                    },
                    "positionNumber": {
                        "description": "Position number of your position. Can be used to order multiple positions.",
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "text": {
                        "description": "A text describing your position.",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "discountedValue": {
                        "description": "An optional discount of the position.",
                        "type": "number",
                        "format": "float",
                        "default": null,
                        "nullable": true
                    },
                    "isPercentage": {
                        "description": "Specifiy if the given discount is in percent.",
                        "type": "boolean",
                        "nullable": true
                    },
                    "taxRate": {
                        "description": "Tax rate of the position.",
                        "type": "number",
                        "format": "float",
                        "example": 19,
                        "nullable": false
                    },
                    "temporary": {
                        "description": "Defines if the position is temporary",
                        "type": "boolean",
                        "default": null,
                        "nullable": true,
                        "deprecated": true
                    },
                    "sumNet": {
                        "description": "Net sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "sumGross": {
                        "description": "Gross sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true,
                        "deprecated": true
                    },
                    "sumDiscount": {
                        "description": "Discount sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "sumTax": {
                        "description": "Tax sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": false,
                        "deprecated": true
                    },
                    "sumNetAccounting": {
                        "description": "Net accounting sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "sumTaxAccounting": {
                        "description": "Tax accounting sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "sumGrossAccounting": {
                        "description": "Gross accounting sum of the position",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "priceNet": {
                        "description": "Net price of the part",
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "nullable": true
                    },
                    "priceGross": {
                        "description": "Gross price of the part",
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "nullable": true
                    },
                    "priceTax": {
                        "description": "Tax on the price of the part",
                        "type": "number",
                        "format": "float",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "externalDocs": {
        "description": "If you are new, find more detailed information about our API here",
        "url": "https://5677.extern.sevdesk.dev/apiOverview/index.html#/"
    },
    "x-tagGroups": [
        {
            "name": "Invoices",
            "tags": [
                "Invoice"
            ]
        },
        {
            "name": "Invoice positions / Invoice items",
            "tags": [
                "InvoicePos"
            ]
        }
    ]
}