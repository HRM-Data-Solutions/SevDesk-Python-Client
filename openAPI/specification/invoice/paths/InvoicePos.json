{
    "get": {
        "tags": [
            "InvoicePos"
        ],
        "summary": "Get invoice positions",
        "description": "Get all positions corresponding to an invoice",
        "operationId": "getInvoicePos",
        "parameters": [
            {
                "name": "invoice[objectName]",
                "in": "query",
                "description": "SevDesk Object name, should be 'Invoice'",
                "default": "Invoice",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            {
                "name": "invoice[id]",
                "in": "query",
                "description": "Invoice-ID",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            {
                "name": "limit",
                "in": "query",
                "description": "Maximum number of items to query",
                "default": 9999,
                "schema": {
                    "type": "integer"
                }
            },
            {
                "name": "embed",
                "in": "query",
                "description": "Get some additional information. Embed can handle multiple values, they must be separated by comma. Default ``.",
                "required": false,
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            }
        ],
        "responses": {
            "200": {
                "description": "Returns invoice positions",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "objects": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "../schemas/InvoicePosition.json"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request"
            },
            "401": {
                "description": "Authentication required"
            },
            "500": {
                "description": "Server Error"
            }
        }
    }
}
